namespace :racecar do
  desc 'start Racecar'
  task :start do
    on roles(:all) do
      within release_path do
        with rails_env: fetch(:stage) do
          has_racecar_consumers_path = test("[ -d #{release_path}/#{fetch(:racecar_consumers_path)} ]")
          if has_racecar_consumers_path
            all_consumer_files = capture("ls #{release_path}/#{fetch(:racecar_consumers_path)}")
            files = all_consumer_files.split("\n").find_all{|e| e.end_with?('.rb') }
            files.each do |path|
              file_name = File.basename(path, ".*")
              class_name = file_name.split('_').collect(&:capitalize).join
              info "[racecar:start] start racecar #{class_name} ..."
              pidfile = "tmp/#{fetch(:racecar_pid_path)}/#{fetch(:racecar_pid_prefix)}_#{file_name}.pid"
              logfile = "#{release_path}/log/racecar_#{file_name}.log"
              unless test("[ -d #{logfile} ]")
                execute "touch", logfile
              end
              execute "bundle", "exec racecar", class_name, "--pidfile=#{pidfile} --daemonize --log #{release_path}/log/racecar_#{file_name}.log"
            end
          else
            warn 'racecar_consumers_path is blank, skip start racecar'
          end

        end
      end
    end
  end
end
